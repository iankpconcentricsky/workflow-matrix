on:
  push:
    branches: [develop, staging, main]
  pull_request:
    branches: [staging]
    type: [open]

env:
  DOCKER_SERVER: us-east1-docker.pkg.dev
  SERVICE_ACCOUNT_EMAIL: github-csky-staging@concentric-sky-development.iam.gserviceaccount.com
  REVIEW_CLUSTER_NAME: iposs-cluster
  STAGING_CLUSTER_NAME: iposs-cluster
  PRODUCTION_CLUSTER_NAME: iposs-cluster

jobs:
  CheckoutCodebase:
    runs-on: ubuntu-latest
    name: Checkout Codebase
    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.push.head.ref }}
          fetch-depth: 0

      - name: Find Last Successful Workflow Commit
        id: lastSuccessfulWorkflowCommit
        uses: nrwl/nx-set-shas@v2.0.2


  Test:
    runs-on: ubuntu-latest
    name: Run Code Tests
    needs: [CheckoutCodebase]
    steps:
      - name: Run tests
        run: "echo Tests pass!"


  Build:
    name: Create Docker Images
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [Test]
    steps:
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node_version: 16
      - name: Build Images
        run: |-
          "nx affected --target=build --base=${{ env.NX_BASE }}"


  DeployReview:
    name: Deploy Images To Review Cluster
    if: github.event_name == 'push' && github.ref_name == 'develop'
    runs-on: ubuntu-latest
    needs: [Build]
    environment:
      name: Review
      url: http://example.com/#review
    steps:
      - uses: ./deploy-steps.yaml
        with:
          title: Review Server
          cluster_name: iposs-cluster
          docker_server: env.DOCKER_SERVER
          service_account_email: env.SERVICE_ACCOUNT_EMAIL


  DeployStaging:
    name: Deploy Images To Staging Cluster
    if: github.event_name == 'push' && github.ref_name == 'staging'
    runs-on: ubuntu-latest
    needs: [Build]
    environment:
      name: Staging
      url: http://example.com/#staging
    steps:
      - uses: ./deploy-steps.yaml
        with:
          title: Staging Server
          cluster_name: iposs-cluster
          docker_server: env.DOCKER_SERVER
          service_account_email: env.SERVICE_ACCOUNT_EMAIL


  DeployProduction:
    name: Deploy Images To Production Cluster
    if: github.event_name == 'push' && github.ref_name == 'main'
    runs-on: ubuntu-latest
    needs: [Build]
    environment:
      name: Production
      url: http://example.com/#production
    steps:
      - uses: ./deploy-steps.yaml
        with:
          title: Production
          cluster_name: iposs-cluster
          docker_server: env.DOCKER_SERVER
          service_account_email: env.SERVICE_ACCOUNT_EMAIL
